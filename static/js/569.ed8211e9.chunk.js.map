{"version":3,"file":"static/js/569.ed8211e9.chunk.js","mappings":"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","sources":["components/Contact/index.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport emailjs from '@emailjs/browser';\r\nimport { Snackbar, Alert } from '@mui/material';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: relative;\r\n  z-index: 1;\r\n  align-items: center;\r\n  @media (max-width: 960px) {\r\n    padding: 0px;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 1350px;\r\n  padding: 0px 0px 80px 0px;\r\n  gap: 12px;\r\n  @media (max-width: 960px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-size: 42px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  @media (max-width: 768px) {\r\n    margin-top: 12px;\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.div`\r\n  font-size: 18px;\r\n  text-align: center;\r\n  max-width: 600px;\r\n  color: ${({ theme }) => theme.text_secondary};\r\n  @media (max-width: 768px) {\r\n    margin-top: 12px;\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst ContactForm = styled.form`\r\n  width: 95%;\r\n  max-width: 600px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.card};\r\n  padding: 32px;\r\n  border-radius: 16px;\r\n  box-shadow: rgba(23, 92, 230, 0.15) 0px 4px 24px;\r\n  margin-top: 28px;\r\n  gap: 12px;\r\n`;\r\n\r\nconst ContactTitle = styled.div`\r\n  font-size: 24px;\r\n  margin-bottom: 6px;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.text_primary};\r\n`;\r\n\r\nconst ContactInput = styled.input`\r\n  flex: 1;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.text_secondary};\r\n  outline: none;\r\n  font-size: 18px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  border-radius: 12px;\r\n  padding: 12px 16px;\r\n  &:focus {\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nconst ContactInputMessage = styled.textarea`\r\n  flex: 1;\r\n  background-color: transparent;\r\n  border: 1px solid ${({ theme }) => theme.text_secondary};\r\n  outline: none;\r\n  font-size: 18px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  border-radius: 12px;\r\n  padding: 12px 16px;\r\n  &:focus {\r\n    border: 1px solid ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nconst ContactButton = styled.input`\r\n  width: 100%;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  background: linear-gradient(225deg, hsla(271, 100%, 50%, 1) 0%, hsla(294, 100%, 50%, 1) 100%);\r\n  padding: 13px 16px;\r\n  margin-top: 2px;\r\n  border-radius: 12px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  transition: all 0.4s ease-in-out;\r\n  \r\n  &:hover {\r\n    transform: scale(1.02);\r\n    box-shadow: 20px 20px 60px #1F2634;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.95);\r\n    filter: brightness(0.5);\r\n  }\r\n`;\r\n\r\nconst Contact = () => {\r\n  const [open, setOpen] = useState({ open: false, message: '', severity: 'success' });\r\n  const form = useRef();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    emailjs.sendForm(process.env.REACT_APP_EMAILJS_SERVICE_ID, process.env.REACT_APP_EMAILJS_TEMPLATE_ID, form.current, process.env.REACT_APP_EMAILJS_PUBLIC_KEY)\r\n      .then((result) => {\r\n        setOpen({ open: true, message: 'Email sent successfully!', severity: 'success' });\r\n        form.current.reset();\r\n      }, (error) => {\r\n        console.log(error.text);\r\n        setOpen({ open: true, message: 'Failed to send email. Please try again.', severity: 'error' });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <Title>Contact</Title>\r\n        <Desc>Feel free to reach out to me for any questions or collaboration!</Desc>\r\n        <ContactForm ref={form} onSubmit={handleSubmit}>\r\n          <ContactTitle>Email Me ðŸš€</ContactTitle>\r\n          <ContactInput\r\n            placeholder=\"Your Email\"\r\n            name=\"from_email\"\r\n            type=\"email\"\r\n            required\r\n            aria-label=\"Your Email\"\r\n          />\r\n          <ContactInput\r\n            placeholder=\"Your Name\"\r\n            name=\"from_name\"\r\n            type=\"text\"\r\n            required\r\n            aria-label=\"Your Name\"\r\n          />\r\n          <ContactInput\r\n            placeholder=\"Subject\"\r\n            name=\"subject\"\r\n            type=\"text\"\r\n            required\r\n            aria-label=\"Subject\"\r\n          />\r\n          <ContactInputMessage\r\n            placeholder=\"Message\"\r\n            rows=\"4\"\r\n            name=\"message\"\r\n            required\r\n            aria-label=\"Message\"\r\n          />\r\n          <ContactButton type=\"submit\" value=\"Send\" aria-label=\"Send Email\" />\r\n        </ContactForm>\r\n        <Snackbar\r\n          open={open.open}\r\n          autoHideDuration={6000}\r\n          onClose={() => setOpen(prev => ({ ...prev, open: false }))}\r\n        >\r\n          <Alert onClose={() => setOpen(prev => ({ ...prev, open: false }))} severity={open.severity}>\r\n            {open.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n"],"names":["Container","styled","Wrapper","Title","theme","text_primary","Desc","text_secondary","ContactForm","card","ContactTitle","ContactInput","primary","ContactInputMessage","ContactButton","useState","open","message","severity","setOpen","form","useRef","ref","onSubmit","e","preventDefault","emailjs","process","REACT_APP_EMAILJS_SERVICE_ID","REACT_APP_EMAILJS_TEMPLATE_ID","current","REACT_APP_EMAILJS_PUBLIC_KEY","then","result","reset","error","console","log","text","placeholder","name","type","required","rows","value","autoHideDuration","onClose","prev"],"sourceRoot":""}