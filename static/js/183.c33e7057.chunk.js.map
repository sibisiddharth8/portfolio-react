{"version":3,"file":"static/js/183.c33e7057.chunk.js","mappings":"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","sources":["components/Cards/ExperienceCard.jsx","components/Experience/index.js"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Document = styled.img`\r\n    display: none;\r\n    height: 70px;\r\n    width: fit-content;\r\n    background-color: #000;\r\n    border-radius: 10px;\r\n    &:hover {\r\n        cursor: pointer;\r\n        opacity: 0.8;\r\n    }\r\n`;\r\n\r\nconst Description = styled.p`\r\n    width: 100%;\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text_primary + 99};\r\n    margin-bottom: 10px;\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst Span = styled.span`\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    max-width: 100%;\r\n    -webkit-line-clamp: 4;\r\n    -webkit-box-orient: vertical;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst Card = styled.article`\r\n    width: 650px;\r\n    border-radius: 10px;\r\n    box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 10px;\r\n    padding: 12px 16px;\r\n    justify-content: space-between;\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    transition: all 0.3s ease-in-out;\r\n    &:hover {\r\n        box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.2);\r\n        transform: translateY(-5px);\r\n    }\r\n    @media only screen and (max-width: 768px) {\r\n        padding: 10px;\r\n        gap: 8px;\r\n        width: 300px;\r\n    }\r\n    &:hover ${Document} {\r\n        display: block;\r\n    }\r\n    &:hover ${Span} {\r\n        overflow: visible;\r\n        -webkit-line-clamp: unset;\r\n    }\r\n    border: 0.1px solid #306EE8;\r\n`;\r\n\r\nconst Top = styled.header`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 12px;\r\n`;\r\n\r\nconst Image = styled.img`\r\n    height: 50px;\r\n    background-color: #000;\r\n    border-radius: 10px;\r\n    margin-top: 4px;\r\n    @media only screen and (max-width: 768px) {\r\n        height: 40px;\r\n    }\r\n`;\r\n\r\nconst Body = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst Role = styled.h3`\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text_primary + 99};\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n\r\nconst Company = styled.p`\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text_secondary + 99};\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst Date = styled.p`\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text_secondary + 80};\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 10px;\r\n    }\r\n`;\r\n\r\nconst Skills = styled.section`\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 12px;\r\n    margin-top: -10px;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n`;\r\n\r\nconst Skill = styled.p`\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text_primary + 99};\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst ExperienceCard = ({ experience }) => {\r\n    return (\r\n        <Card\r\n            aria-labelledby={`experience-card-${experience.id}`}\r\n            role=\"region\"\r\n            aria-label={`Experience at ${experience.company}`}\r\n        >\r\n            <Top>\r\n                <Image \r\n                    src={experience.img} \r\n                    alt={`Logo or image for ${experience.role} role at ${experience.company}`} \r\n                />\r\n                <Body>\r\n                    <Role>{experience.role}</Role>\r\n                    <Company>{experience.company}</Company>\r\n                    <Date>{experience.date}</Date>\r\n                </Body>\r\n            </Top>\r\n            <Description>\r\n                {experience?.desc && <Span>{experience.desc}</Span>}\r\n                {experience?.skills && (\r\n                    <>\r\n                        <br />\r\n                        <Skills>\r\n                            <b>Skills:</b>\r\n                            <ItemWrapper>\r\n                                {experience.skills.map((skill, index) => (\r\n                                    <Skill key={index}>â€¢ {skill}</Skill>\r\n                                ))}\r\n                            </ItemWrapper>\r\n                        </Skills>\r\n                    </>\r\n                )}\r\n            </Description>\r\n            {experience.doc && (\r\n                <a \r\n                    href={experience.doc} \r\n                    target=\"_blank\" \r\n                    rel=\"noopener noreferrer\" \r\n                    aria-label={`Download document for ${experience.role} at ${experience.company}`}\r\n                >\r\n                    <Document \r\n                        src={experience.doc} \r\n                        alt={`Document for ${experience.role} at ${experience.company}`}\r\n                    />\r\n                </a>\r\n            )}\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ExperienceCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\nimport ExperienceCard from '../Cards/ExperienceCard';\r\nimport { ref, onValue } from \"firebase/database\"; \r\nimport { database } from \"../../FirebaseConfig\"; \r\n\r\nconst Container = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 40px 0 80px;\r\n  position: relative;\r\n  z-index: 1;\r\n  @media (max-width: 960px) {\r\n    padding: 20px 0;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 1350px;\r\n  padding: 80px 0;\r\n  gap: 12px;\r\n  @media (max-width: 960px) {\r\n    padding: 40px 0;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  font-size: 42px;\r\n  text-align: center;\r\n  font-weight: 600;\r\n  margin-top: 20px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  @media (max-width: 768px) {\r\n    margin-top: 12px;\r\n    font-size: 32px;\r\n  }\r\n`;\r\n\r\nconst Desc = styled.p`\r\n  font-size: 18px;\r\n  text-align: center;\r\n  max-width: 600px;\r\n  color: ${({ theme }) => theme.text_secondary};\r\n  @media (max-width: 768px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nconst TimelineSection = styled.div`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12px;\r\n`;\r\n\r\nconst ExperienceTimeline = () => {\r\n  const [experiences, setExperiences] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const dataRef = ref(database, 'experiences');\r\n    onValue(dataRef, (snapshot) => {\r\n      const fetchedData = snapshot.val();\r\n      if (fetchedData) {\r\n        setExperiences(Object.values(fetchedData));\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Container id=\"experience\">\r\n      <Wrapper>\r\n        <Title>Experience</Title>\r\n        <Desc>\r\n          My work experience as a Developer and other roles on different clubs and team projects.\r\n        </Desc>\r\n        <TimelineSection>\r\n          <Timeline>\r\n            {experiences.map((experience, index) => (\r\n              <TimelineItem key={experience.id}>\r\n                <TimelineSeparator>\r\n                  <TimelineDot variant=\"outlined\" color=\"secondary\" />\r\n                  {index < experiences.length - 1 && (\r\n                    <TimelineConnector style={{ background: '#854CE6' }} />\r\n                  )}\r\n                </TimelineSeparator>\r\n                <TimelineContent sx={{ py: '12px', px: 2 }}>\r\n                  <ExperienceCard experience={experience} />\r\n                </TimelineContent>\r\n              </TimelineItem>\r\n            ))}\r\n          </Timeline>\r\n        </TimelineSection>\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ExperienceTimeline;\r\n"],"names":["Document","styled","Description","theme","text_primary","Span","Card","Top","Image","Body","Role","Company","text_secondary","Date","Skills","ItemWrapper","Skill","experience","id","role","company","src","img","alt","date","desc","skills","map","skill","index","doc","href","target","rel","Container","Wrapper","Title","Desc","TimelineSection","useState","experiences","setExperiences","useEffect","dataRef","ref","database","onValue","snapshot","fetchedData","val","Object","values","Timeline","TimelineItem","TimelineSeparator","TimelineDot","variant","color","length","TimelineConnector","style","background","TimelineContent","sx","py","px"],"sourceRoot":""}