{"version":3,"file":"static/js/850.77b390ab.chunk.js","mappings":"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","sources":["components/Projects/ProjectsStyle.js","components/Cards/ProjectCards.jsx","components/Projects/index.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport _default from '../../themes/default';\r\n\r\nexport const Container = styled.div`\r\n    background: linear-gradient(343.07deg, rgba(132, 59, 206, 0.06) 5.71%, rgba(132, 59, 206, 0) 64.83%);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    position: relative;\r\n    z-index: 1;\r\n    align-items: center;\r\n    clip-path: polygon(0 0, 100% 0, 100% 100%,100% 98%, 0 100%);\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    max-width: 1350px;\r\n    padding: 10px 0px 100px 0;\r\n    gap: 12px;\r\n    @media (max-width: 960px) {\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const Title = styled.div`\r\nfont-size: 42px;\r\ntext-align: center;\r\nfont-weight: 600;\r\nmargin-top: 20px;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  @media (max-width: 768px) {\r\n      margin-top: 12px;\r\n      font-size: 32px;\r\n  }\r\n`;\r\n\r\nexport const Desc = styled.div`\r\n    font-size: 18px;\r\n    text-align: center;\r\n    max-width: 600px;\r\n    color: ${({ theme }) => theme.text_secondary};\r\n    @media (max-width: 768px) {\r\n        margin-top: 12px;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nexport const ToggleButtonGroup = styled.div`\r\n    display: flex;\r\n    border: 1.5px solid ${({ theme }) => theme.primary};\r\n    color: ${({ theme }) => theme.primary};\r\n    font-size: 16px;\r\n    border-radius: 12px;\r\n    font-weight: 500;\r\n    margin: 22px 0px;\r\n    @media (max-width: 768px) {\r\n        font-size: 12px;\r\n    }\r\n`\r\n\r\nexport const ToggleButton = styled.div`\r\n    padding: 8px 18px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    ${({ active, theme }) =>\r\n        active && `\r\n    background: ${theme.primary + 20};\r\n    `\r\n    }\r\n    &:hover {\r\n        background: ${({ theme }) => theme.primary + 8};\r\n    }\r\n    @media (max-width: 768px) {\r\n        padding: 6px 8px;\r\n        border-radius: 4px;\r\n    }\r\n`\r\nexport const Divider = styled.div`\r\n    background: ${({ theme }) => theme.primary};\r\n`\r\n\r\n\r\nexport const CardContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 28px;\r\n    flex-wrap: wrap;\r\n    // display: grid;\r\n    // grid-template-columns: repeat(3, 1fr);\r\n    // grid-gap: 32px;\r\n    // grid-auto-rows: minmax(100px, auto);\r\n    // @media (max-width: 960px) {\r\n    //     grid-template-columns: repeat(2, 1fr);\r\n    // }\r\n    // @media (max-width: 640px) {\r\n    //     grid-template-columns: repeat(1, 1fr);\r\n    // }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ViewAllProjects = styled.a`\r\n    text-align: center;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text_primary};\r\n    padding: 12px 24px;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    background: -webkit-linear-gradient(225deg, hsla(271, 100%, 50%, 1) 0%, hsla(294, 100%, 50%, 1) 100%);\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    transition: all 0.5s ease;\r\n    &:hover {\r\n        transform: scale(1.05);\r\n    transition: all 0.4s ease-in-out;\r\n    box-shadow:  20px 20px 60px #1F2634,\r\n    filter: brightness(1);\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n        font-size: 14px;\r\n    }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FaGithub, FaHeart  } from \"react-icons/fa\"; \r\n\r\nconst githubsponslink = 'https://github.com/sponsors/sibisiddharth8';\r\n\r\nconst Button = styled.button`\r\n    display: none;\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: ${({ theme }) => theme.white};\r\n    color: ${({ theme }) => theme.text_black};\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    border: none;\r\n    border-radius: 10px;\r\n    cursor: pointer;\r\n    transition: all 0.8s ease-in-out;\r\n`;\r\n\r\nconst Card = styled.article`\r\n    width: 330px;\r\n    height: 490px;\r\n    background-color: ${({ theme }) => theme.card};\r\n    cursor: pointer;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 12px 4px rgba(0, 0, 0, 0.4);\r\n    overflow: hidden;\r\n    padding: 26px 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 14px;\r\n    transition: all 0.5s ease-in-out;\r\n    &:hover {\r\n        transform: translateY(-10px);\r\n        box-shadow: 0 0 50px 4px rgba(0, 0, 0, 0.6);\r\n        filter: brightness(1.1);\r\n    }\r\n    &:hover ${Button} {\r\n        display: block;\r\n    }\r\n`;\r\n\r\nconst ImageWrapper = styled.div`\r\n    position: relative;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 180px;\r\n    background-color: ${({ theme }) => theme.bgLight};\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n    box-shadow: 0 0 16px 2px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Image = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: ${({ isLoading }) => (isLoading ? 'none' : 'block')};\r\n`;\r\n\r\nconst Loader = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    border: 4px solid ${({ theme }) => theme.text_secondary};\r\n    border-radius: 50%;\r\n    border-top: 4px solid ${({ theme }) => theme.primary};\r\n    animation: spin 1s linear infinite;\r\n    \r\n    @keyframes spin {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(360deg); }\r\n    }\r\n`;\r\n\r\nconst Tags = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    height: 52px;\r\n    align-items: center;\r\n    -webkit-line-clamp: 2;\r\n    text-overflow: ellipsis;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    margin-top: 4px;\r\n`;\r\n\r\nconst Tag = styled.span`\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.primary};\r\n    background-color: ${({ theme }) => theme.primary + 15};\r\n    padding: 2px 8px;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Details = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0;\r\n    padding: 0 2px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n    font-size: 20px;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.text_secondary};\r\n    overflow: hidden;\r\n    display: -webkit-box;\r\n    max-width: 100%;\r\n    -webkit-line-clamp: 2;\r\n    -webkit-box-orient: vertical;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst Date = styled.time`\r\n    font-size: 12px;\r\n    margin-left: 2px;\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text_secondary + 80};\r\n    @media only screen and (max-width: 768px) {\r\n        font-size: 10px;\r\n    }\r\n`;\r\n\r\nconst Description = styled.p`\r\n    font-weight: 400;\r\n    color: ${({ theme }) => theme.text_secondary + 99};\r\n    overflow: hidden;\r\n    margin-top: 8px;\r\n    display: -webkit-box;\r\n    max-width: 100%;\r\n    -webkit-line-clamp: 3;\r\n    -webkit-box-orient: vertical;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nconst CardDataHolder = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding-left: 10px;\r\n`;\r\n\r\nconst Members = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst SocialMediaIcon = styled.a`\r\n  display: flex;\r\n  font-size: 1.3rem;\r\n  color: ${({ theme }) => theme.text_primary};\r\n  transition: color 0.2s ease-in-out;\r\n  &:hover {\r\n    color: ${({ theme }) => theme.primary};\r\n  }\r\n`;\r\n\r\nconst CardIcons = styled.div`\r\n    display: flex;\r\n    gap: 1rem;\r\n`;\r\n\r\nconst Avatar = styled.img`\r\n    width: 38px;\r\n    height: 38px;\r\n    border-radius: 50%;\r\n    margin-left: -10px;\r\n    background-color: ${({ theme }) => theme.white};\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\r\n    border: 3px solid ${({ theme }) => theme.card};\r\n`;\r\n\r\nconst ProjectCards = ({ project, setOpenModal }) => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    return (\r\n        <Card\r\n            onClick={() => setOpenModal({ state: true, project })}\r\n            aria-labelledby={`project-title-${project.id}`}\r\n            role=\"button\"\r\n            tabIndex=\"0\"\r\n        >\r\n            <ImageWrapper>\r\n                <Image\r\n                    src={project.image}\r\n                    alt={`Image for project titled ${project.title}`}\r\n                    onLoad={() => setIsLoading(false)}\r\n                    onError={() => setIsLoading(false)}\r\n                    isLoading={isLoading}\r\n                />\r\n                {isLoading && <Loader />}\r\n            </ImageWrapper>\r\n            <Tags>\r\n                {project.tags?.map((tag, index) => (\r\n                    <Tag key={index}>{tag}</Tag>\r\n                ))}\r\n            </Tags>\r\n            <Details>\r\n                <Title id={`project-title-${project.id}`}>{project.title}</Title>\r\n                <Date dateTime={project.date}>{project.date}</Date>\r\n                <Description>{project.description}</Description>\r\n            </Details>\r\n            <CardDataHolder>\r\n                <Members>\r\n                    {project.member?.map((member, index) => (\r\n                        <Avatar\r\n                            key={index}\r\n                            src={member.img}\r\n                            alt={`Profile of ${member.name}`}\r\n                        />\r\n                    ))}\r\n                </Members>\r\n                <CardIcons>\r\n                    {project?.github && (\r\n                        <SocialMediaIcon\r\n                            href={project.github}\r\n                            target=\"_blank\"\r\n                            aria-label={`GitHub repository for ${project.title}`}\r\n                        >\r\n                            <FaGithub size={24} />\r\n                        </SocialMediaIcon>\r\n                    )}\r\n                    <SocialMediaIcon\r\n                        href={githubsponslink}\r\n                        target=\"_blank\"\r\n                        aria-label=\"Sibi Siddharth S - GitHub Sponsors Page\"\r\n                    >\r\n                        <FaHeart size={23} />\r\n                    </SocialMediaIcon>\r\n                </CardIcons>\r\n            </CardDataHolder>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ProjectCards;\r\n","import React, { useState, useMemo } from 'react';\r\nimport { Container, Wrapper, Title, Desc, CardContainer, ToggleButtonGroup, ToggleButton, Divider, ButtonContainer } from './ProjectsStyle';\r\nimport ProjectCard from '../Cards/ProjectCards';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled(Link)`\r\n    text-align: center;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    color: ${({ theme }) => theme.text_primary};\r\n    padding: 12px 24px;\r\n    border-radius: 8px;\r\n    background-color: ${({ theme }) => theme.primary};\r\n    background: -webkit-linear-gradient(225deg, hsla(271, 100%, 50%, 1) 0%, hsla(294, 100%, 50%, 1) 100%);\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    transition: all 0.5s ease;\r\n    &:hover {\r\n        transform: scale(1.05);\r\n        transition: all 0.4s ease-in-out;\r\n        box-shadow: 20px 20px 60px #1F2634;\r\n        filter: brightness(1);\r\n    }\r\n    @media only screen and (max-width: 600px) {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nconst Projects = ({ projectsData, openModal, setOpenModal, projectFilters, defaultfilter, viewAllProjectsButton }) => {\r\n  const [toggle, setToggle] = useState(defaultfilter);\r\n\r\n  const getUniqueProjects = (projects) => {\r\n    const seen = new Set();\r\n    return projects.filter(project => {\r\n      const duplicate = seen.has(project.id);\r\n      seen.add(project.id);\r\n      return !duplicate;\r\n    });\r\n  };\r\n\r\n  const filteredProjects = useMemo(() => {\r\n    let projects;\r\n    if (toggle === 'top') {\r\n      projects = projectsData.filter(project => project.rank !== undefined);\r\n    } else if (toggle === 'all') {\r\n      projects = projectsData;\r\n    } else {\r\n      projects = projectsData.filter(project => project.category === toggle);\r\n    }\r\n\r\n    return getUniqueProjects(projects);\r\n  }, [toggle, projectsData]);\r\n\r\n  return (\r\n    <Container id=\"projects\">\r\n      <Wrapper>\r\n        <Title>Projects</Title>\r\n        <Desc>\r\n          I have worked on a wide range of projects. From web apps to AI/ML applications. Here are some of my projects.\r\n        </Desc>\r\n        <ToggleButtonGroup>\r\n          {projectFilters.map(category => (\r\n            <React.Fragment key={category}>\r\n              <ToggleButton\r\n                aria-label={`Filter projects by ${category}`}\r\n                active={toggle === category}\r\n                value={category}\r\n                onClick={() => setToggle(category)}\r\n              >\r\n                {category.toUpperCase()}\r\n              </ToggleButton>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))}\r\n        </ToggleButtonGroup>\r\n        <CardContainer>\r\n          {filteredProjects.map(project => (\r\n            <ProjectCard\r\n              key={project.id}\r\n              project={project}\r\n              openModal={openModal}\r\n              setOpenModal={setOpenModal}\r\n            />\r\n          ))}\r\n        </CardContainer>\r\n\r\n        {viewAllProjectsButton && (\r\n          <ButtonContainer>\r\n            <StyledLink to=\"/AllProjects\" aria-label=\"View all my projects\">View All Projects</StyledLink>\r\n          </ButtonContainer>\r\n        )}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n"],"names":["Container","styled","Wrapper","Title","theme","text_primary","Desc","text_secondary","ToggleButtonGroup","primary","ToggleButton","active","Divider","CardContainer","ButtonContainer","Button","white","text_black","Card","card","ImageWrapper","bgLight","Image","isLoading","Loader","Tags","Tag","Details","Date","Description","CardDataHolder","Members","SocialMediaIcon","CardIcons","Avatar","project","setOpenModal","useState","setIsLoading","onClick","state","id","role","tabIndex","src","image","alt","title","onLoad","onError","tags","map","tag","index","dateTime","date","description","member","img","name","github","href","target","size","StyledLink","Link","projectsData","openModal","projectFilters","defaultfilter","viewAllProjectsButton","toggle","setToggle","filteredProjects","useMemo","projects","seen","Set","filter","duplicate","has","add","getUniqueProjects","undefined","rank","category","value","toUpperCase","to"],"sourceRoot":""}